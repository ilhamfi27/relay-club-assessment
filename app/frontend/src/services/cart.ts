import { useRequest } from './api.internal';
import { Products } from './products';

export interface CartRequest {
  product_id: number;
  quantity: number;
}

export interface CartResponse {
  quantity: number;
  product: Products;
}

// Generated by https://quicktype.io

export interface CheckoutItems {
  cart: CartItem[];
  total: number;
}

export interface CartItem extends Products {
  quantity: number;
}

const storeCartToLocalStorage = (cart: CartRequest) => {
  // add quantity to the same product in local storage
  const cartInLocalStorage = localStorage.getItem('cart');
  if (cartInLocalStorage) {
    const parsedCart = JSON.parse(cartInLocalStorage) as CartRequest[];
    const index = parsedCart.findIndex(
      (item) => item.product_id === cart.product_id,
    );
    if (index !== -1) {
      parsedCart[index].quantity += cart.quantity;
    } else {
      parsedCart.push(cart);
    }
    localStorage.setItem('cart', JSON.stringify(parsedCart));
  } else {
    localStorage.setItem('cart', JSON.stringify([cart]));
  }
  const latestCart = JSON.parse(
    localStorage.getItem('cart') ?? '[]',
  ) as CartRequest[];
  return latestCart.find((item) => item.product_id === cart.product_id);
};

export const useCart = () => {
  const { client } = useRequest();
  const findAll = (page = 1, size = 100) => {
    return client.get<CartResponse[]>(`/carts?page=${page}&size${size}`);
  };
  const add = (data: CartRequest) => {
    const localCart = storeCartToLocalStorage(data);
    return client.put(`/carts/products`, localCart);
  };
  const checkout = () => {
    return client.get<CheckoutItems>(`/carts/checkout`);
  };
  return { add, findAll, checkout };
};
